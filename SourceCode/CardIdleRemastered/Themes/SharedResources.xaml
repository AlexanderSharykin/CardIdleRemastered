<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CardIdleRemastered"
                    xmlns:commands="clr-namespace:CardIdleRemastered.Commands">

    <local:EnumLocalizationConverter x:Key="EnumTranslator" />
    <local:TranslationConverter x:Key="strTranslator" />
    <commands:NavigationCommand x:Key="Redirect"/>

    <!-- http://stackoverflow.com/questions/27045396/wpf-datagrid-highlight-selected-row-even-when-selecteditem-is-a-bound-property -->
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="CornflowerBlue"/>
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="CornflowerBlue"/>

    <SolidColorBrush x:Key="TitleBrush" Color="Cyan"/>
    <SolidColorBrush x:Key="NameBrush" Color="Gold"/>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="ToolTip" Value="{Binding Path=Header, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Tag" Value="@"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="5" Padding="5"                                    
                                    Background="#B0FFFFFF"                   
                                    BorderBrush="#B0FFFFFF" BorderThickness="2">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ContentPresenter Name="ContentSite" Grid.Row="0" Margin="0,0,0,5"
                                              Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}, Converter={StaticResource BoolToVisible}}"
                                              VerticalAlignment="Center" HorizontalAlignment="Center"
                                              ContentSource="Header">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform CenterX="0" CenterY="0" Angle="270" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>

                                <ContentPresenter Name="ContentPic"  Grid.Row="1"
                                              VerticalAlignment="Center" HorizontalAlignment="Center"
                                              ContentSource="Tag"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="ContentPic" Property="TextElement.FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="ContentPic" Property="TextElement.FontWeight" Value="Bold"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gold" />
                            <Setter TargetName="Border" Property="Background" Value="LightSteelBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="ColumnHeaderHeight" Value="36"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SelectionMode" Value="Single"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{DynamicResource DynGridHeaders}"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="DataGridCell" x:Key="GameCellStyle" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(local:BadgeModel.CardIdleProcess).IsRunning}" Value="true">
                <Setter Property="Background" Value="{DynamicResource DynRunningGame}"/>
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="DataGridText">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <DataTemplate x:Key="GameImgCell" DataType="{x:Type local:BadgeIdentity}">
        <Grid Width="230" ToolTip="{Binding Path=Title}" Background="Transparent" Cursor="Hand">
            <!-- http://stackoverflow.com/questions/3885007/wpf-image-command-binding -->
            <!-- http://stackoverflow.com/a/31905177/1506454 -->
            <Grid.InputBindings>
                <MouseBinding Gesture="MiddleClick" 
                                  Command="{StaticResource Redirect}" 
                                  CommandParameter="{Binding Path=StorePageUrl}" />
            </Grid.InputBindings>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Image Source="{Binding Path=ImageUrl}"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Height="110" Stretch="Fill"/>

            <Border Grid.Row="1" Background="{DynamicResource DynGridHeaders}">
                <TextBlock Text="{Binding Path=Title}" 
                               TextWrapping="Wrap"
                               Foreground="Black"
                               VerticalAlignment="Bottom"
                               HorizontalAlignment="Center"/>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BadgeImageTile" DataType="{x:Type local:BadgeLevelData}">
        <Grid Margin="2,2,2,0">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsCompleted}" Value="True">
                            <Setter Property="Background" Value="MediumSlateBlue"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Grid.RowDefinitions>
                <RowDefinition Height="88"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Image Width="80" Height="80" Source="{Binding Path=PictureUrl}"/>
            <TextBlock Grid.Row="1" HorizontalAlignment="Center" 
                           Text="{Binding Path=Name}" TextWrapping="Wrap"
                           Style="{StaticResource DataGridText}"/>
            <Border Grid.Row="2" Background="{DynamicResource DynGridHeaders}">
                <TextBlock HorizontalAlignment="Center" 
                               Style="{StaticResource DataGridText}"
                               Text="{Binding Path=Level}"/>
            </Border>
        </Grid>
    </DataTemplate>

    <Style TargetType="ListBoxItem" x:Key="ItemNoHighlight">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="Transparent" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="PopupContent">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Headers" />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="{Binding Path=Key, Converter={StaticResource EnumTranslator}}" Margin="5"/>

            <ListBox Grid.Column="1" BorderThickness="0"
                        ItemsSource="{Binding Path=DataContext.FilterStates, ElementName=LayoutRoot}"
                        SelectedItem="{Binding Path=Value, Converter={StaticResource EnumTranslator}}"
                        ItemContainerStyle="{StaticResource ItemNoHighlight}">

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <RadioButton IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}, TargetNullValue=false}"
                                            Margin="5,0" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                            Content="{Binding .}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </DataTemplate>

    <Style x:Key="PropName" TargetType="Label">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource DynStatsHeaders}"/>
    </Style>

    <Style x:Key="PropValue" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource DynStatsValues}"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Margin" Value="0,5,15,0"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LinkNoToolTip" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Lime"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="Link" TargetType="TextBlock" BasedOn="{StaticResource LinkNoToolTip}">
        <Setter Property="ToolTip" Value="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>
    </Style>
</ResourceDictionary>